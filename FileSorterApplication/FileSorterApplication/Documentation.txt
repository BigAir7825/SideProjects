This file contains a general layout of this program, along with the function of each program
NOTE: This program is not complete at this time, so these specifications are purely conceptual at this time

Overall Structure:
On initial startup, the program asks the user for their user name this is being run in, then confirms the folder structure with them.
After the initial setup, the user is prompted for the time between checks of the Dump folder the program completes, every 24 hrs is default

On startup:
Reads from a text file that shows all file paths, if the file is not there, then it means that this is the first time the program has run.
If this is the first time, the program will prompt the user for the user name (I will add support for different names of files later)
If it is not the first time, the program will save the filepaths, then look for new files in the dump folder, if there is not a descriptive
name, it will prompt the user to enter a descriptive name and then organize the file afterwards

Order:
Main object: College, has 4 subobjects of type year representing years of college, each year has 3 objects of type Semester representing
Fall, Spring, and Summer. These each have 3 FocusAreas representing classes, internship and jobs, and miscellaneous. Depending on the type
of focus area, it will have subfolders representing a Subject (or class), which will have a Section if applicable, these are where the files are stored

User Responsibilities: 
User must create a file system in the convention outlined above, they also must ensure that they follow a naming scheme in naming folders.
The user is also responsible for correctly naming files if given the prompt to do so, along with ensuring that names are accurate to location

How the program determines placement:
If the user gives a descriptive name that follows the naming convention, the program will ask for permission before moving to appropriate folder.
If not, the program will prompt the user to enter a descriptive name before doing so, checks will be done on the folders periodically to test the
validity of the files contained within

Time between checks:
On startup, the user can specify the time between checks, or can stick to the default reccomended time the times between checks are as listed below
Checking dump folder: every 1 hour while program is running
Checking current courses/semesters: every 1 day while program is running
Checking past courses/semesters: every 1 week while program is running
Checking past years: every 1 month while program is running

Purpose of FileWork:
This does some basic work with files, it reads and writes to text documents, these text documents are ONLY for program maintenance, and are 
unrelated to the actual folder structure

Purpose of InitialSetup:
Given a case for coming to it, this class instructs the user on how to setup the program, this would include the names of the different folders
along wit the amount of each, this program will only run on startup on a new system, and should only be accessed once